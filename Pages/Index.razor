@page "/"
@inject HttpClient Http


<MudImage Style="display: block; margin-left: auto; margin-right: auto; width: 25%; height: 30%;" Src="https://www.arh.org/wp-content/uploads/2019/10/main-arh-logo-new.png" Alt="ARH Logo" Elevation="0"/>
<MudAlert Severity="Severity.Error" Class=@errorVis>One or more fields are blank. Review your selections.</MudAlert>
 <MudContainer MaxWidth="MaxWidth.Medium">
 <MudPaper Class="pa-16 ma-2" Elevation="3">
    <MudText Align="Align.Center" Typo="Typo.h5">@Name</MudText>
</MudPaper>
<MudGrid Spacing="10" Justify="Justify.Center">
    <MudItem xs="12">
        <MudPaper Class="pa-16 ma-2" Elevation="3">
<MudItem>
            <MudSelect T="string" Label="Location" AnchorOrigin="Origin.BottomCenter" @bind-Value="@Location" Colors="Color.Red">
                <MudSelectItem Value="@("AH-Beckley Home Health")" />
                <MudSelectItem Value="@("BH-Barbourville")" />
                <MudSelectItem Value="@("CH-Tug Valley")" />
                <MudSelectItem Value="@("DH-Highlands")" />
                <MudSelectItem Value="@("EH-McDowell")" />
                <MudSelectItem Value="@("FH-Hazard")" />
                <MudSelectItem Value="@("GH-Whitesburg")" />
                <MudSelectItem Value="@("HH-Mary Breck")" />
                <MudSelectItem Value="@("IH-Summers Co")" />
                <MudSelectItem Value="@("JH-Harlan")" />
                <MudSelectItem Value="@("KH-Middlesboro")" />
                <MudSelectItem Value="@("MH-Morgan Co")" />
                <MudSelectItem Value="@("NH-OLOW")" />
                <MudSelectItem Value="@("PD-Paintsville")" />
                <MudSelectItem Value="@("SL-System - Lexington")" />
                <MudSelectItem Value="@("SP-System - Pikeville")" />
            </MudSelect>
</MudItem>
<MudItem>
            <MudSelect T="string" Label="Device Type" AnchorOrigin="Origin.BottomCenter" @bind-Value="@DeviceType">
                <MudSelectItem Value="@("DC-Desktop")" />
                <MudSelectItem Value="@("DP-Provider Workstation")" />
                <MudSelectItem Value="@("DW-Diagnostic Workstation")" />
                <MudSelectItem Value="@("DX-Exam Room/Patient Room")" />
                <MudSelectItem Value="@("LP-Provider Laptop")" />
                <MudSelectItem Value="@("LT-Laptop")" />
                <MudSelectItem Value="@("PC-Printer/Copier/Fax")" />
                <MudSelectItem Value="@("PL-Label Printer")" />
                <MudSelectItem Value="@("PN-Printer")" />
                <MudSelectItem Value="@("RX-Pharmacy Cabinet")" />
                <MudSelectItem Value="@("SC-Networked Scanner")" />
                <MudSelectItem Value="@("TB-Tracking Board")" />
                <MudSelectItem Value="@("TL-Tablet")" />
                <MudSelectItem Value="@("WM-Wall-Mount")" />
                <MudSelectItem Value="@("WW-Workstation on Wheels")" />
                
            </MudSelect>
</MudItem>
     <MudItem>
            <MudAutocomplete T="string" Label="Dept# or Clinic#" @bind-Value="code" SearchFunc="@Search3"
                         ResetValueOnEmptyText="@resetValueOnEmptyText"
                         CoerceText="@coerceText" CoerceValue="@coerceValue"
                         AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Error"
                         MaxItems=null />
</MudItem>
<MudButton Class="mt-4" Variant="Variant.Filled" Style="background-color: #808080; color: white;" FullWidth="true" OnClick="BtnOnClick" @onkeydown="Enter">Generate</MudButton>
        </MudPaper>
    </MudItem>
</MudGrid> 
 </MudContainer>
@code {
    private string value1;
    public string Name { get; set; } = "Workstation 1";
    public string Location { get; set; }
   //public string Department {get; set;}
     public string code {get; set;}
    public string DeviceType {get; set;}
    public string errorVis {get; set;} = "invisible";

 private string[] Deps_Clinics =
    {
        "01-Accounting", "02-Administration", "03-Accounts Payable", "04-Billing",
        "05-BioMed", "06-Cardiology Imaging", "07-Case Management", "08-Compliance",
        "09-Cardio Pulmonary", "10-Cardiology", "11-Cardiovascular",
        "12-Central Supply", "13-Dialysis", "14-Doctors Lounge", "15-Emergency Department", "16-Enviornmental Services/Housekeeping",
        "17-Education", "18-Finance", "19-Food & Nutrional Service", "20-Home Health", "21-Health Information Management",
        "22-Human Resources", "23-Intensive Care", "24-Information Technology", "25-Laboratory",
        "26-LTACH Unit", "27-Med/Surg Unit-1st-Floor", "31-Marketing", "32-Material Management",
        "33-Med/Surg Unit", "34-Maintenance", "35-Nurse Administration", "36-Nursing Station",
        "37-Obstetrics", "38-Orthopedic", "39-Outpatient Rehab", "40-Operating Room",
        "41-Patient Access", "42-Plant Operations/Services", "43-Payroll", "44-Physical Therapy",
        "45-Psych Unit", "46-Quality Management /Risk", "47-Rehabilitation Unit", "48-Radiology Imaging", "49-Respiratory Care",
        "50-Pharmacy", "51-Security", "52-Sleep Lab", "53-Sports Medicine",
        "54-School of Nursing", "55-Transition Care", "56-Training", "57-Volunteer Services", "58-Wound Care",
        "59-Women's Services ","AA-Beckley ARH HHA","AB-Beckley ARH HHA Logan Subunit","AH-Beckley ARH Hospital","AI-ARH Cardiology Assoc Beckley",
        "AJ-Beckley ARH Primary Care","AK-Beckley ARH Urology Clinic","AL-ARH Oak Hill Primary Care Ctr","AM-Beckley ARH Medical Mall",
        "AN-ARH Oncology Assoc Beckley","AO-ARH Southern WV Clinic","BB-Blood Bank","BH-Barbourville ARH Hospital","BI-Cumb Valley Surg Assoc Barb",
        "BJ-Cumb Valley Med & Surg Assoc","BK-ARH Campus Health Center Union","BL-ARH CV Med & Surg- Pineville","BM-ARH CV Med & Surg Pineville",
        "BN-ARH CV Med & Spec Assoc","BO-ARH CV Med & Spec Assoc-Corbin","CA-ARH Pike Co HHA","CH-Tug Valley ARH Reg Medical Ctr","CI-ARH Specialty Assoc Tug Valley",
        "CJ-WFHC Tug Valley","CK-ARH Cardio Assoc Tug Valley","CM-ARH Medical Assoc Tug Valley","DA-Highlands ARH HHA","DH-Highlands ARH Reg Med Center",
        "DI-ARH Med and Surg Assoc HLANDS","DJ-ARH Hometown Family Care","DK-ARH Med and Spec Assoc Ptville","DM-ARH Med and Spec Assoc HLANDS","EA-McDowell ARH HHA",
        "EH-McDowell ARH","EI-McDowell Prof Services Clinic","EJ-ARH Family Care Wayland","EK-ARH Family Care Wheelwright","EL-ARH Lackey Clinic",
        "EM-ARH McDowell Clinic","EN-ARH Family Care-Wayland","EO-ARH Family Care-Wheelwright","EP-ARH Med & Spec Assoc P-Burg","FA-Hazard ARH HHA",
        "FH-Hazard Regional Medical Ctr","FI-ARH Bariatric Center","FJ-ARH Cardiology Hazard","FK-ARH Specialty Assoc Hazard","FL-Jackson ARH Specialty Clinic",
        "FM-Hazard Family Health Center","FN-ARH Dermatology","FO-ARH Hazard Clinic","FP-ARH Pain Management/Headache","FQ-ARH Med & Spec Assoc Hazard","FR-ARH Med Mall Family Spec Clin",
        "GA-Whitesburg ARH HHA","GH-Whitesburg ARH Hospital",

    };

    private bool resetValueOnEmptyText;

    private bool coerceText;
    private bool coerceValue;

    List<TCode> listofCodes = new List<TCode>();

  public class TCode
  {
    public string Code {get; set;}

        public TCode(string code)
    {
        Code = code;
    }

  }

  public void Enter(KeyboardEventArgs e)
{
    if (e.Code == "Enter")
    {
       BtnOnClick();
    }
}

     protected override async Task OnInitializedAsync()
  {
      string csvCode = await Http.GetStringAsync("sample-data/ClinicCodes.csv");
       List<string> codeRows = csvCode.Split("\n").ToList();
        for (int i = 0; i < codeRows.Count; i++)
        {
            if (i > 0)
            {
                 List<string> codeStringList = codeRows[i].Split(";").ToList(); 
                 
                 TCode codeOB = new TCode(codeStringList[0]);
                listofCodes.Add(codeOB);
            }
        }
  }

    protected void BtnOnClick()
    {
        if(Location == null || code == null || DeviceType == null)
        {
            errorVis = "visible";
            return;
        }

        string abr = Location.Substring(0,2);
        string deptAbr = code.Substring(0,2);
        string devType = DeviceType.Substring(0,2);
        Name = abr + deptAbr + devType + "##";
        errorVis = "invisible";
    }

        private async Task<IEnumerable<string>> Search1(string value)
    {
        await Task.Delay(5);

        // if text is null or empty, don't return values (drop-down will not open)
        if (string.IsNullOrEmpty(value))
            return new string[0];
        return Deps_Clinics.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }

     private async Task<IEnumerable<string>> Search3(string value)
    {
        string[] stringList = listofCodes.Select(x => x.Code).ToArray();

        await Task.Delay(5);

        // if text is null or empty, don't return values (drop-down will not open)
        if (string.IsNullOrEmpty(value))
            return new string[0];
        return stringList.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }

} 