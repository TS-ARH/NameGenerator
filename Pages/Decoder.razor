@page "/decoder"
<MudImage Style="display: block; margin-left: auto; margin-right: auto; width: 25%; height: 30%;" Src="https://www.arh.org/wp-content/uploads/2019/10/main-arh-logo-new.png" Alt="ARH Logo" Elevation="0"/>
<MudAlert Severity="Severity.Error" Class=@errorVis>@error</MudAlert>
 <MudContainer MaxWidth="MaxWidth.Medium">
 <MudPaper Class="pa-16 ma-2" Elevation="3">
      <MudTextField @bind-Value="@Name" Label="Device Name" Variant="Variant.Text"></MudTextField>
</MudPaper>
<MudGrid Spacing="10" Justify="Justify.Center">
    <MudItem xs="12">
        <MudPaper Class="pa-16 ma-2" Elevation="3">
<MudItem>
    <MudText Typo="Typo.h6">@Location</MudText>
</MudItem>
<MudItem>
    <MudText Typo="Typo.h6">@DepClin</MudText>
</MudItem>
<MudItem>
    <MudText Typo="Typo.h6">@Type</MudText>
</MudItem>
<MudButton Class="mt-4" Variant="Variant.Filled" Style="background-color: #808080; color: white;" FullWidth="true" OnClick="BtnOnClick">Decode</MudButton>
        </MudPaper>
    </MudItem>
</MudGrid>  
 </MudContainer>
@code {
    private string value1;
    public string Name { get; set; } = "Workstation 1";
    public string Location { get; set; } = "Location";
    public string LocDecoded {get; set;}
    public string DepClin {get; set;} = "Dept# or Clinic#";
    public string DepClinDecoded {get; set;}
    public string Type {get; set;} = "Device Type";
    public string TypeDecoded {get; set;}
    public string errorVis {get; set;} = "invisible";
    public string error {get; set;} = "";

 private string[] Deps_Clinics =
    {
        "01-Accounting", "02-Administration", "03-Accounts Parable", "04-Billing",
        "05-BioMed", "06-Cardiology Imaging", "07-Case Management", "08-Compliance",
        "09-Cardio Pulmonary", "10-Cardiology", "11-Cardiovascular",
        "12-Central Supply", "13-Dialysis", "14-Doctors Lounge", "15-Emergency Department", "16-Enviornmental Services/Housekeeping",
        "17-Education", "18-Finance", "19-Food & Nutrional Service", "20-Home Health", "21-Health Information Management",
        "22-Human Resources", "23-Intensive Care", "24-Information Technology", "25-Laboratory",
        "26-LTACH Unit", "27-Med/Surg Unit-1st-Floor", "31-Marketing", "32-Material Management",
        "33-Med/Surg Unit", "34-Maintenance", "35-Nurse Administration", "36-Nursing Station",
        "37-Obstetrics", "38-Orthopedic", "39-Outpatient Rehab", "40-Operating Room",
        "41-Patient Access", "42-Plant Operations/Services", "43-Payroll", "44-Physical Therapy",
        "45-Psych Unit", "46-Quality Management /Risk", "47-Rehabilitation Unit", "48-Radiology Imaging", "49-Respiratory Care",
        "50-Pharmacy", "51-Security", "52-Sleep Lab", "53-Sports Medicine",
        "54-School of Nursing", "55-Transition Care", "56-Training", "57-Volunteer Services", "58-Wound Care",
        "59-Women's Services ","AA-Beckley ARH HHA","AB-Beckley ARH HHA Logan Subunit","AH-Beckley ARH Hospital","AI-ARH Cardiology Assoc Beckley",
        "AJ-Beckley ARH Primary Care","AK-Beckley ARH Urology Clinic","AL-ARH Oak Hill Primary Care Ctr","AM-Beckley ARH Medical Mall",
        "AN-ARH Oncology Assoc Beckley","AO-ARH Southern WV Clinic","BB-Blood Bank","BH-Barbourville ARH Hospital","BI-Cumb Valley Surg Assoc Barb",
        "BJ-Cumb Valley Med & Surg Assoc","BK-ARH Campus Health Center Union","BL-ARH CV Med & Surg- Pineville","BM-ARH CV Med & Surg Pineville",
        "BN-ARH CV Med & Spec Assoc","BO-ARH CV Med & Spec Assoc-Corbin","CA-ARH Pike Co HHA","CH-Tug Valley ARH Reg Medical Ctr","CI-ARH Specialty Assoc Tug Valley",
        "CJ-WFHC Tug Valley","CK-ARH Cardio Assoc Tug Valley","CM-ARH Medical Assoc Tug Valley","DA-Highlands ARH HHA","DH-Highlands ARH Reg Med Center",
        "DI-ARH Med and Surg Assoc HLANDS","DJ-ARH Hometown Family Care","DK-ARH Med and Spec Assoc Ptville","DM-ARH Med and Spec Assoc HLANDS","EA-McDowell ARH HHA",
        "EH-McDowell ARH","EI-McDowell Prof Services Clinic","EJ-ARH Family Care Wayland","EK-ARH Family Care Wheelwright","EL-ARH Lackey Clinic",
        "EM-ARH McDowell Clinic","EN-ARH Family Care-Wayland","EO-ARH Family Care-Wheelwright","EP-ARH Med & Spec Assoc P-Burg","FA-Hazard ARH HHA",
        "FH-Hazard Regional Medical Ctr","FI-ARH Bariatric Center","FJ-ARH Cardiology Hazard","FK-ARH Specialty Assoc Hazard","FL-Jackson ARH Specialty Clinic",
        "FM-Hazard Family Health Center","FN-ARH Dermatology","FO-ARH Hazard Clinic","FP-ARH Pain Management/Headache","FQ-ARH Med & Spec Assoc Hazard","FR-ARH Med Mall Family Spec Clin",
        "GA-Whitesburg ARH HHA","GH-Whitesburg ARH Hospital",

    };

    private bool resetValueOnEmptyText;

    private bool coerceText;
    private bool coerceValue;
    

    protected void decode()
    {
        switch(Location)
        {
            case "AH":
                LocDecoded = "Beckley";
            break;
            case "BH":
                LocDecoded = "Barbourville";
            break;
            case "CH":
                LocDecoded = "Tug Valley";
            break;
            case "DH":
                LocDecoded = "Highlands";
            break;
             case "EH":
                LocDecoded = "McDowell";
            break;
             case "FH":
                LocDecoded = "Hazard";
            break;
             case "GH":
                LocDecoded = "Whitesburg";
            break;
             case "HH":
                LocDecoded = "Mary Breck";
            break;
             case "IH":
                LocDecoded = "Summers Co";
            break;
            case "JH":
                LocDecoded = "Harlan";
            break;
            case "KH":
                LocDecoded = "Middlesboro";
            break;
            case "MH":
                LocDecoded = "Morgan Co";
            break;
            case "NH":
                LocDecoded = "OLOW";
            break;
            case "PD":
                LocDecoded = "Paintsville";
            break;
            case "SL":
                LocDecoded = "System - Lexington";
            break;
            case "SP":
                LocDecoded = "System - Pikeville";
            break;

        }
        Location = LocDecoded;

        switch(DepClin)
        {
            case "01":
                DepClinDecoded = "Accounting";
            break;
            case "02":
                DepClinDecoded = "Administration";
            break;
            case "03":
                DepClinDecoded = "Accounts Payable";
            break;
            case "04":
                DepClinDecoded = "Billing";
            break;
            case "05":
                DepClinDecoded = "BioMed";
            break;
            case "06":
                DepClinDecoded = "Cardiology Imaging";
            break;
        }
        DepClin = DepClinDecoded;

        switch(Type)
        {
            case "DT":
                TypeDecoded = "Desktop";
            break;
            case "LT":
                TypeDecoded = "Laptop";
            break;
        }
        Type = TypeDecoded;
    }

    protected void BtnOnClick()
    {
        if(Name == null || Name == "Workstation 1")
        {
            errorVis = "visible";
            error = "Please ensure that you've entered a valid Workstation name and try again.";
            return;
        }

        
        Location = Name.Substring(0,2);
        DepClin = Name.Substring(2,2);
        Type = Name.Substring(4,2);
        

        decode();

        errorVis = "invisible";
    }

        private async Task<IEnumerable<string>> Search1(string value)
    {
        await Task.Delay(5);

        // if text is null or empty, don't return values (drop-down will not open)
        if (string.IsNullOrEmpty(value))
            return new string[0];
        return Deps_Clinics.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }

}